// <auto-generated />
using CommanderGQL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CommanderGQL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("CommanderGQL.Models.Command", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CommandLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("Commands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommandLine = "CommandLine1",
                            HowTo = "HowTo .NET 5",
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommandLine = "CommandLine2",
                            HowTo = "HowTo Docker",
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 3,
                            CommandLine = "CommandLine3",
                            HowTo = "HowTo Windows",
                            PlatformId = 3
                        },
                        new
                        {
                            Id = 4,
                            CommandLine = "CommandLine4",
                            HowTo = "HowTo Ubuntu",
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 5,
                            CommandLine = "CommandLine5",
                            HowTo = "HowTo Kubernetes",
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 6,
                            CommandLine = "CommandLine6",
                            HowTo = "HowTo RedHat1",
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 7,
                            CommandLine = "CommandLine7",
                            HowTo = "HowTo RedHat2",
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 8,
                            CommandLine = "CommandLine8",
                            HowTo = "HowTo RedHat3",
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 9,
                            CommandLine = "CommandLine9",
                            HowTo = "HowTo RedHat4",
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 10,
                            CommandLine = "CommandLine10",
                            HowTo = "HowTo .NET 5-1",
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 11,
                            CommandLine = "CommandLine11",
                            HowTo = "HowTo .NET 5-2",
                            PlatformId = 1
                        });
                });

            modelBuilder.Entity("CommanderGQL.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LicenseKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LicenseKey = "1111111",
                            Name = ".NET 5"
                        },
                        new
                        {
                            Id = 2,
                            LicenseKey = "2222222",
                            Name = "Docker"
                        },
                        new
                        {
                            Id = 3,
                            LicenseKey = "3333333",
                            Name = "Windows"
                        },
                        new
                        {
                            Id = 4,
                            LicenseKey = "4444444",
                            Name = "Ubuntu"
                        },
                        new
                        {
                            Id = 5,
                            LicenseKey = "5555555",
                            Name = "Kubernetes"
                        },
                        new
                        {
                            Id = 6,
                            LicenseKey = "666666",
                            Name = "RedHat"
                        });
                });

            modelBuilder.Entity("CommanderGQL.Models.Command", b =>
                {
                    b.HasOne("CommanderGQL.Models.Platform", "Platform")
                        .WithMany("Commands")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("CommanderGQL.Models.Platform", b =>
                {
                    b.Navigation("Commands");
                });
#pragma warning restore 612, 618
        }
    }
}
